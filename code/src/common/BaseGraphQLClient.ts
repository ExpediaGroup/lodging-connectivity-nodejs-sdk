/*
 * Copyright (C) 2024 Expedia, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.

 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { ApolloClient, HttpLink, InMemoryCache, NormalizedCacheObject } from '@apollo/client/core';
import { Client, ClientConfigurations } from '../core/client/Client';

export abstract class BaseGraphQLClient {
  private readonly coreClient: Client;
  private readonly clientConfiguration: ClientConfigurations;
  private readonly apolloClient: ApolloClient<NormalizedCacheObject>;

  protected constructor(clientConfig: ClientConfigurations) {
    this.clientConfiguration = clientConfig;
    this.coreClient = new Client(clientConfig);
    this.apolloClient = this.initializeApolloClient();
  }

  public query: typeof ApolloClient.prototype.query = async (options) => {
    return await this.apolloClient.query(options);
  };

  public mutate: typeof ApolloClient.prototype.mutate = async (options) => {
    return await this.apolloClient.mutate(options);
  };

  private initializeApolloClient() {
    return new ApolloClient({
      uri: this.clientConfiguration.endpoint,
      cache: new InMemoryCache(),
      link: new HttpLink({
        uri: this.clientConfiguration.endpoint,
        fetch: this.coreClient.fetch.bind(this.coreClient)
      })
    });
  }
}
