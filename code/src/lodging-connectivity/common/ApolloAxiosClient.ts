/*
 * Copyright (C) 2024 Expedia, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.

 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestInit, Response } from 'node-fetch';
import { Client, ClientConfigurations } from '../../core/client/Client';
import { maskResponse } from '../../core/logging/LogMasker';
import { ExpediaGroupError } from '../../core/model/error/ExpediaGroupError';
import { ApolloAxiosClientHelpers } from './ApolloAxiosClientHelpers';

/*
* Serves as a bridge between Apollo's node-fetch based interface and Axios client used in the core package.
* */
export class ApolloAxiosClient extends Client {
  
  constructor(config: ClientConfigurations) {
    super(config);
  }

  // The fetch method compatible with the Fetch API
  public async fetch(uri: string, options: RequestInit): Promise<Response> {
    try {
      const axiosConfig = ApolloAxiosClientHelpers.buildAxiosConfigFromFetchOptions(uri, options);
      const axiosResponse = await this.axiosClient.request(axiosConfig);
      return ApolloAxiosClientHelpers.buildFetchResponseFromAxiosResponse(maskResponse(axiosResponse));
    } catch (error) {
      throw new ExpediaGroupError(error.message);
    }
  }
}
