/*
 * Copyright (C) 2024 Expedia, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.

 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { BaseGraphQLClient, ClientConfiguration, ClientEnvironment, EndpointProvider } from '../common';

/**
 * A client for interacting with EG Lodging Connectivity Sandbox GraphQL API.
 *
 * This client is configured with a `ClientConfiguration` that includes authentication details,
 * and it automatically determines the appropriate API endpoints based on the environment (e.g., production or test).
 *
 * @constructor Creates a new instance of `SandboxClient` using the provided configuration.
 * @param config The `ClientConfiguration` that includes API credentials and other optional parameters such as client environment
 */
export class SandboxDataManagementClient extends BaseGraphQLClient {
  constructor(config: ClientConfiguration) {
    const env = config.environment ?? ClientEnvironment.PROD;

    super({
      key: config.key,
      secret: config.secret,
      endpoint: EndpointProvider.getSandboxClientEndpoint(config.environment ?? env),
      authEndpoint: EndpointProvider.getAuthEndpoint(config.environment ?? env),
      requestTimeout: config.requestTimeout
    });
  }
}
